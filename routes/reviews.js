const express = require("express");
const Review = require("../models/Review");
const authMiddleware = require("../middlewares/authMiddleware");
const adminMiddleware = require("../middlewares/roleMiddleware");  // Importar Middleware de Admin

const router = express.Router();

/* 游댳 Agregar una Rese침a (Solo Clientes) */
router.post("/", authMiddleware, async (req, res) => {
  try {
    const { salonId, calificacion, comentario } = req.body;

    // Validar que la calificaci칩n est칠 entre 1 y 5
    if (calificacion < 1 || calificacion > 5) {
      return res.status(400).json({ mensaje: "La calificaci칩n debe estar entre 1 y 5." });
    }

    // Crear la rese침a
    const nuevaRese침a = new Review({
      cliente: req.usuario.id,
      salon: salonId,
      calificacion,
      comentario,
    });

    await nuevaRese침a.save();
    res.status(201).json({ mensaje: "Rese침a agregada con 칠xito", rese침a: nuevaRese침a });
  } catch (error) {
    res.status(500).json({ mensaje: "Error al agregar la rese침a", error });
  }
});

/* 游댳 Obtener Rese침as de un Sal칩n */
router.get("/:salonId", async (req, res) => {
  try {
    const rese침as = await Review.find({ salon: req.params.salonId }).populate("cliente", "nombre");
    res.json(rese침as);
  } catch (error) {
    res.status(500).json({ mensaje: "Error al obtener las rese침as", error });
  }
});

/* 游댳 Eliminar una Rese침a (Solo el Cliente que la cre칩) */
router.delete("/:id", authMiddleware, async (req, res) => {
  try {
    const rese침a = await Review.findById(req.params.id);

    if (!rese침a) {
      return res.status(404).json({ mensaje: "Rese침a no encontrada" });
    }

    // Verificar si el usuario es el due침o de la rese침a
    if (rese침a.cliente.toString() !== req.usuario.id) {
      return res.status(403).json({ mensaje: "No tienes permiso para eliminar esta rese침a" });
    }

    await rese침a.deleteOne();
    res.json({ mensaje: "Rese침a eliminada correctamente" });
  } catch (error) {
    res.status(500).json({ mensaje: "Error al eliminar la rese침a", error });
  }
});


/* 游댳 Eliminar una Rese침a (Solo el Cliente que la cre칩 o un Admin) */
router.delete("/:id", authMiddleware, async (req, res) => {
    try {
      const rese침a = await Review.findById(req.params.id);
  
      if (!rese침a) {
        return res.status(404).json({ mensaje: "Rese침a no encontrada" });
      }
  
      // Si el usuario es el due침o de la rese침a o es un administrador, puede eliminarla
      if (rese침a.cliente.toString() !== req.usuario.id && req.usuario.rol !== "admin") {
        return res.status(403).json({ mensaje: "No tienes permiso para eliminar esta rese침a" });
      }
  
      await rese침a.deleteOne();
      res.json({ mensaje: "Rese침a eliminada correctamente" });
    } catch (error) {
      res.status(500).json({ mensaje: "Error al eliminar la rese침a", error });
    }
  });

module.exports = router;